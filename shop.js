// shop.js (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô 4.0 - ‡∏£‡∏∞‡∏ö‡∏ö Ownership + ‡∏´‡∏•‡∏≤‡∏¢‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô)

// --- üî• ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ---
const PROMPT_PAY_QR_URL = "https://res.cloudinary.com/ddpgaowiq/image/upload/v1760798023/screenshot_20251018_212152_tivgnm.png";
const TRUE_MONEY_NUMBER = "064-897-6803";

// --- üî• ‡∏Å‡∏∏‡∏ç‡πÅ‡∏à Cloudinary ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ---
const CLOUD_NAME = "ddpgaowiq";
const UPLOAD_PRESET = "nonkungshop";
// ---------------------------------

// (‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö "‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå" ‡∏Ç‡∏≠‡∏á User)
let userOwnedProducts = []; // (‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á)


// (‡∏£‡∏≠‡πÉ‡∏´‡πâ DOM ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô)
document.addEventListener('DOMContentLoaded', () => {

    const db = firebase.firestore();
    const productListDiv = document.getElementById('product-list');

    // --- 1. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Pop-up ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô (‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ) ---
    function showPaymentModal(product, productId) { // (‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ productId ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡πÅ‡∏Æ‡∏Å)
        
        const backdrop = document.createElement('div');
        backdrop.className = 'payment-modal-backdrop';
        const modal = document.createElement('div');
        modal.className = 'payment-modal-content';

        modal.innerHTML = `
            <button class="payment-modal-close">&times;</button>
            <h2>‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠!</h2>
            <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö <strong>${product.name}</strong></p>
            <h3 style="color: #007FFF;">‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ${product.price} ‡∏ö‡∏≤‡∏ó</h3>
            <hr style="border: 0; border-top: 1px solid #eee; margin: 1rem 0;">
            
            <strong>1. ‡πÇ‡∏≠‡∏ô/‡∏™‡πÅ‡∏Å‡∏ô (PromptPay ‡∏´‡∏£‡∏∑‡∏≠ TrueMoney)</strong>
            <img src="${PROMPT_PAY_QR_URL}" alt="PromptPay QR Code" class="payment-qr-code">
            <div class="truemoney-info" style="margin-top: 1rem;">
                ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏≠‡∏ô TrueMoney: ${TRUE_MONEY_NUMBER}
            </div>
            
            <div class="slip-uploader">
                <strong>2. ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</strong>
                <p style="font-size: 0.9rem; color: #666;">*‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà</p>
                <label for="slip-file-input" class="slip-uploader-label">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏•‡∏¥‡∏õ</label>
                <input type="file" id="slip-file-input" accept="image/*">
                <span class="slip-file-name">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå...</span>
                <button class="btn-confirm-payment" id="btn-confirm" disabled>‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô (‡∏¢‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ)</button>
                <div id="upload-status" style="margin-top: 0.5rem;"></div>
            </div>
        `;

        backdrop.appendChild(modal);
        document.body.appendChild(backdrop);

        // --- (Logic ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á Pop-up: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå, ‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô) ---
        const slipFileInput = modal.querySelector('#slip-file-input');
        const slipFileName = modal.querySelector('.slip-file-name');
        const btnConfirm = modal.querySelector('#btn-confirm');
        const uploadStatus = modal.querySelector('#upload-status');
        let selectedFile = null;

        slipFileInput.onchange = (e) => {
            if (e.target.files && e.target.files.length > 0) {
                selectedFile = e.target.files[0];
                slipFileName.innerText = selectedFile.name;
                btnConfirm.innerText = "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô";
                btnConfirm.disabled = false;
            }
        };

        btnConfirm.onclick = async () => {
            if (!selectedFile) return;
            if (!auth.currentUser) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ñ‡∏£‡∏±‡∏ö!');
                return;
            }

            btnConfirm.disabled = true;
            btnConfirm.innerText = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ...";
            uploadStatus.innerText = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î... (‡∏´‡πâ‡∏≤‡∏°‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ)";
            uploadStatus.style.color = "blue";

            try {
                const slipUrl = await uploadSlipToCloudinary(selectedFile);
                await saveOrderToFirestore(productId, slipUrl);

                uploadStatus.innerText = "‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ô 24 ‡∏ä‡∏°.";
                uploadStatus.style.color = "green";
                
                setTimeout(() => { document.body.removeChild(backdrop); }, 4000);
            } catch (error) {
                console.error("Upload failed: ", error);
                uploadStatus.innerText = "‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " + error.message;
                btnConfirm.disabled = false;
                btnConfirm.innerText = "‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á";
            }
        };

        modal.querySelector('.payment-modal-close').onclick = () => {
            document.body.removeChild(backdrop);
        };
    }

    // --- (‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î/‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ... ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
    async function uploadSlipToCloudinary(file) {
        const formData = new FormData();
        formData.append('file', file);
        formData.append('upload_preset', UPLOAD_PRESET);
        formData.append('folder', 'slips');
        const res = await fetch(`https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`, {
            method: 'POST',
            body: formData
        });
        const data = await res.json();
        if (data.error) throw new Error(data.error.message);
        return data.secure_url;
    }
    async function saveOrderToFirestore(productId, slipUrl) {
        await db.collection('orders').add({
            productId: productId,
            slipUrl: slipUrl,
            status: "pending_review",
            userId: auth.currentUser.uid,
            userEmail: auth.currentUser.email,
            createdAt: firebase.firestore.FieldValue.serverTimestamp()
        });
    }


    // --- üî• 2. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà: ‡∏™‡∏£‡πâ‡∏≤‡∏á Pop-up "‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î" üî• ---
    function showDownloadModal(productName, versions) {
        const backdrop = document.createElement('div');
        backdrop.className = 'payment-modal-backdrop';

        const modal = document.createElement('div');
        modal.className = 'payment-modal-content';

        let versionLinksHTML = ''; // (‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏Ç‡∏≠‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå)
        
        // (‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô)
        if (versions && Object.keys(versions).length > 0) {
            for (const [versionName, versionUrl] of Object.entries(versions)) {
                versionLinksHTML += `
                    <a href="${versionUrl}" class="btn-download" target="_blank" rel="noopener noreferrer">
                        ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î ${versionName}
                    </a>
                `;
            }
        } else {
            versionLinksHTML = '<p>‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢, ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡πâ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ</p>';
        }

        modal.innerHTML = `
            <button class="payment-modal-close">&times;</button>
            <h2>‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå</h2>
            <p>‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á <strong>${productName}</strong></p>
            <div class="download-links-container">
                ${versionLinksHTML}
            </div>
        `;

        backdrop.appendChild(modal);
        document.body.appendChild(backdrop);

        // (‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î)
        modal.querySelector('.payment-modal-close').onclick = () => {
            document.body.removeChild(backdrop);
        };
    }


    // --- üî• 3. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á "‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå" ‡∏Ç‡∏≠‡∏á User (‡πÉ‡∏´‡∏°‡πà!) üî• ---
    async function fetchUserPermissions() {
        if (auth.currentUser) {
            try {
                // (‡∏î‡∏∂‡∏á "‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå" ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ ‡∏à‡∏≤‡∏Å "‡∏Å‡∏é" ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ)
                const docRef = db.collection('user_permissions').doc(auth.currentUser.uid);
                const docSnap = await docRef.get();

                if (docSnap.exists()) {
                    // (‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£)
                    userOwnedProducts = docSnap.data().owned_products || [];
                } else {
                    // (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ = User ‡πÉ‡∏´‡∏°‡πà)
                    userOwnedProducts = [];
                }
            } catch (error) {
                console.error("Error fetching permissions: ", error);
                userOwnedProducts = []; // (‡∏ñ‡πâ‡∏≤ Error ‡∏Å‡πá‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå)
            }
        } else {
            userOwnedProducts = []; // (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô ‡∏Å‡πá‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå)
        }
    }


    // --- 4. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î!) ---
    async function loadProducts() {
        if (!productListDiv) return;
        productListDiv.innerHTML = '<h2>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤...</h2>';

        // (1. ‡∏î‡∏∂‡∏á "‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå" ‡∏Ç‡∏≠‡∏á User ‡∏°‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô)
        await fetchUserPermissions(); 
        
        // (2. ‡∏î‡∏∂‡∏á "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤" ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)
        try {
            const querySnapshot = await db.collection('products').orderBy('createdAt', 'desc').get();
            productListDiv.innerHTML = ''; 
            if (querySnapshot.empty) {
                productListDiv.innerHTML = '<h2>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö</h2>';
                return;
            }

            querySnapshot.forEach(doc => {
                const product = doc.data();
                const productId = doc.id;
                
                const card = document.createElement('div');
                card.className = 'product-card';
                
                // (‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô)
                card.innerHTML = `
                    <img src="${product.imageUrl}" alt="${product.name}" class="product-image">
                    <div class="product-info">
                        <h3 class="product-title">${product.name}</h3>
                        <p class="product-desc">${product.description}</p>
                        <p class="product-price">${product.price} ‡∏ö‡∏≤‡∏ó</p>
                        </div>
                `;
                
                // --- üî• 5. (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç!) Logic ‡∏Å‡∏≤‡∏£‡∏™‡∏•‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏° üî• ---
                const productInfoDiv = card.querySelector('.product-info');
                
                // (‡πÄ‡∏ä‡πá‡∏Å‡∏ß‡πà‡∏≤ User ‡∏°‡∏µ ID ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ô "‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà)
                if (userOwnedProducts.includes(productId)) {
                    // --- ‡∏ñ‡πâ‡∏≤ "‡πÉ‡∏ä‡πà" (‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á) ---
                    const downloadButton = document.createElement('button');
                    downloadButton.className = 'btn-download'; // (‡πÉ‡∏ä‡πâ CSS ‡πÉ‡∏´‡∏°‡πà)
                    downloadButton.innerText = '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î';
                    downloadButton.onclick = () => {
                        showDownloadModal(product.name, product.versions);
                    };
                    productInfoDiv.appendChild(downloadButton);

                } else {
                    // --- ‡∏ñ‡πâ‡∏≤ "‡πÑ‡∏°‡πà" (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ã‡∏∑‡πâ‡∏≠) ---
                    const buyButton = document.createElement('button');
                    buyButton.className = 'btn-buy'; // (‡πÉ‡∏ä‡πâ CSS ‡πÄ‡∏î‡∏¥‡∏°)
                    buyButton.innerText = '‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏•‡∏¢';
                    buyButton.onclick = () => {
                        showPaymentModal(product, productId); 
                    };
                    productInfoDiv.appendChild(buyButton);
                }

                productListDiv.appendChild(card);
            });

        } catch (error) {
            console.error("Error loading products: ", error);
            productListDiv.innerHTML = '<h2>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h2>';
        }
    }

    // --- 5. ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ---
    // (‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö Auth ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡πà‡∏≠‡∏ô ‡∏Ñ‡πà‡∏≠‡∏¢‡πÇ‡∏´‡∏•‡∏î)
    auth.onAuthStateChanged(user => {
        // (‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤ user ‡∏à‡∏∞‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡∏Å‡πá‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤)
        loadProducts();
    });
});
