// admin.js (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô 4.0 - ‡∏£‡∏∞‡∏ö‡∏ö Edit)

// --- üî• ‡∏Å‡∏∏‡∏ç‡πÅ‡∏à Cloudinary (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
const CLOUD_NAME = "ddpgaowiq";
const UPLOAD_PRESET = "nonkungshop";
// ---------------------------------

// (‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö ID ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç)
let currentEditId = null; 

// (‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á Textarea ‡πÄ‡∏õ‡πá‡∏ô Object)
function parseVersions(text) {
    const versions = {};
    const lines = text.split('\n'); 
    for (const line of lines) {
        const parts = line.split(':'); 
        if (parts.length >= 2) {
            const version_name = parts[0].trim();
            const version_url = parts.slice(1).join(':').trim(); 
            if (version_name && version_url) {
                versions[version_name] = version_url;
            }
        }
    }
    return versions;
}

// (‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà: ‡πÅ‡∏õ‡∏•‡∏á Object ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô Textarea)
function formatVersions(versions) {
    if (!versions) return '';
    const lines = [];
    for (const [name, url] of Object.entries(versions)) {
        lines.push(`${name}: ${url}`);
    }
    return lines.join('\n'); // (‡πÄ‡∏≠‡∏≤‡∏°‡∏≤‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Enter)
}


// (‡∏£‡∏≠‡πÉ‡∏´‡πâ DOM ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô)
document.addEventListener('DOMContentLoaded', () => {

    const db = firebase.firestore();

    // --- 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå Admin (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
    auth.onAuthStateChanged(user => {
        if (!user || user.email !== ADMIN_EMAIL) {
            alert('‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ!');
            window.location.href = 'index.html'; 
        }
    });

    // --- 2. ‡∏´‡∏≤ Element (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡πÜ) ---
    const addProductForm = document.getElementById('add-product-form');
    const submitBtn = document.getElementById('submit-btn');
    const uploadStatus = document.getElementById('upload-status');
    const productListAdmin = document.getElementById('product-list-admin');
    
    // (Element ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Edit)
    const formTitle = document.getElementById('form-title');
    const editProductIdInput = document.getElementById('edit-product-id');
    const btnCancelEdit = document.getElementById('btn-cancel-edit');
    
    // (‡∏´‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)
    const productNameInput = document.getElementById('product-name');
    const productPriceInput = document.getElementById('product-price');
    const productDescInput = document.getElementById('product-desc');
    const productImageInput = document.getElementById('product-image');
    const productVersionsInput = document.getElementById('product-versions');


    // --- 3. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏° (‡πÉ‡∏´‡∏°‡πà!) ---
    function resetForm() {
        currentEditId = null; // (‡∏•‡πâ‡∏≤‡∏á ID ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ)
        addProductForm.reset(); // (‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°)
        editProductIdInput.value = '';
        
        formTitle.innerText = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà';
        submitBtn.innerText = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤';
        btnCancelEdit.style.display = 'none'; // (‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å)
        uploadStatus.innerText = '';
        
        // (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç) ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô requirement ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
        productImageInput.required = true; 
    }

    // (‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô)
    btnCancelEdit.onclick = resetForm;


    // --- 4. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î!) ---
    if (addProductForm) {
        addProductForm.onsubmit = async (e) => {
            e.preventDefault();
            
            // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
            const name = productNameInput.value;
            const price = Number(productPriceInput.value);
            const desc = productDescInput.value;
            const file = productImageInput.files[0]; // (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô null ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà)
            
            const versionsText = productVersionsInput.value; 
            const versionsObject = parseVersions(versionsText); 

            if (!name || !price || Object.keys(versionsObject).length === 0) {
                uploadStatus.innerText = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠, ‡∏£‡∏≤‡∏Ñ‡∏≤, ‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÑ‡∏ü‡∏•‡πå';
                uploadStatus.style.color = 'red';
                return;
            }

            submitBtn.disabled = true;
            submitBtn.innerText = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...';
            uploadStatus.innerText = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...';
            uploadStatus.style.color = 'blue';

            try {
                // (‡∏™‡∏£‡πâ‡∏≤‡∏á Object ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å)
                let dataToSave = {
                    name: name,
                    price: price,
                    description: desc,
                    versions: versionsObject,
                    updatedAt: firebase.firestore.FieldValue.serverTimestamp() // (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï)
                };

                // (‡πÄ‡∏ä‡πá‡∏Å‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô "‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà)
                if (currentEditId) {
                    // --- ‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç (UPDATE) ---
                    
                    if (file) {
                        // (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î "‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà")
                        uploadStatus.innerText = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà...';
                        const imageUrl = await uploadToCloudinary(file);
                        dataToSave.imageUrl = imageUrl; // (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏•‡∏á‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï)
                    }
                    // (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà... ‡πÄ‡∏£‡∏≤‡∏Å‡πá‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏¢‡∏∏‡πà‡∏á‡∏Å‡∏±‡∏ö imageUrl ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤)
                    
                    uploadStatus.innerText = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤...';
                    await db.collection('products').doc(currentEditId).update(dataToSave);
                    uploadStatus.innerText = '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!';

                } else {
                    // --- ‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà (ADD) ---
                    
                    // (‡πÇ‡∏´‡∏°‡∏î‡∏ô‡∏µ‡πâ "‡∏ï‡πâ‡∏≠‡∏á" ‡∏°‡∏µ‡∏£‡∏π‡∏õ)
                    if (!file) {
                        uploadStatus.innerText = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏Å)';
                        uploadStatus.style.color = 'red';
                        submitBtn.disabled = false;
                        submitBtn.innerText = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤';
                        return;
                    }

                    uploadStatus.innerText = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏õ‡∏Å...';
                    const imageUrl = await uploadToCloudinary(file);
                    dataToSave.imageUrl = imageUrl;
                    dataToSave.createdAt = firebase.firestore.FieldValue.serverTimestamp(); // (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á)

                    uploadStatus.innerText = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà...';
                    await db.collection('products').add(dataToSave);
                    uploadStatus.innerText = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!';
                }
                
                // (‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ü‡∏≠‡∏£‡πå‡∏° ‡πÅ‡∏•‡∏∞ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà)
                resetForm();
                await loadProducts();

            } catch (error) {
                console.error("Error saving product: ", error);
                uploadStatus.innerText = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error.message;
                submitBtn.disabled = false;
                submitBtn.innerText = currentEditId ? '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤' : '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤';
            }
        };
    }
    
    // (‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏õ Cloudinary - ‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å‡∏°‡∏≤)
    async function uploadToCloudinary(file) {
        const formData = new FormData();
        formData.append('file', file);
        formData.append('upload_preset', UPLOAD_PRESET);
        const res = await fetch(`https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`, {
            method: 'POST',
            body: formData
        });
        const data = await res.json();
        if (data.error) throw new Error(data.error.message);
        return data.secure_url;
    }


    // --- 5. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏°‡∏≤‡πÇ‡∏ä‡∏ß‡πå (‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î!) ---
    async function loadProducts() {
        if (!productListAdmin) return;
        productListAdmin.innerHTML = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤...';
        
        // (‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô)
        const productsMap = {}; 
        
        const querySnapshot = await db.collection('products').orderBy('createdAt', 'desc').get();
        productListAdmin.innerHTML = ''; 
        
        querySnapshot.forEach(doc => {
            const product = doc.data();
            const productId = doc.id;
            
            // (‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô Map)
            productsMap[productId] = product; 
            
            const item = document.createElement('div');
            item.className = 'product-item';
            
            let versionCount = product.versions ? Object.keys(product.versions).length : 0;

            item.innerHTML = `
                <span>
                    <img src="${product.imageUrl}" alt="${product.name}">
                    ${product.name} (${product.price} ‡∏ö‡∏≤‡∏ó)
                    <br>
                    <small style="color: #555;">‡∏°‡∏µ ${versionCount} ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô</small>
                </span>
                <span>
                    <button class="btn-edit" data-id="${productId}">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                    <button class="btn-delete" data-id="${productId}">‡∏•‡∏ö</button>
                </span>
            `;
            
            productListAdmin.appendChild(item);
        });

        // (‡πÄ‡∏û‡∏¥‡πà‡∏° Event ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏° "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç")
        document.querySelectorAll('.btn-edit').forEach(button => {
            button.onclick = (e) => {
                const id = e.target.dataset.id;
                const productToEdit = productsMap[id];
                
                if (productToEdit) {
                    // (‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà "‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç")
                    formTitle.innerText = `‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ${productToEdit.name}`;
                    submitBtn.innerText = '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤';
                    btnCancelEdit.style.display = 'inline-block';
                    
                    // (‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ID ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç)
                    currentEditId = id;
                    editProductIdInput.value = id;
                    
                    // (‡πÄ‡∏≠‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏°‡∏≤‡πÉ‡∏™‡πà‡∏ü‡∏≠‡∏£‡πå‡∏°)
                    productNameInput.value = productToEdit.name || '';
                    productPriceInput.value = productToEdit.price || '';
                    productDescInput.value = productToEdit.description || '';
                    productVersionsInput.value = formatVersions(productToEdit.versions);
                    
                    // (‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å "required" ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û)
                    productImageInput.required = false; 

                    // (‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏à‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏ö‡∏ô‡∏™‡∏∏‡∏î)
                    window.scrollTo(0, 0); 
                }
            };
        });

        // (‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö - ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
        document.querySelectorAll('.btn-delete').forEach(button => {
            button.onclick = async (e) => {
                const id = e.target.dataset.id;
                if (confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ?')) {
                    try {
                        await db.collection('products').doc(id).delete();
                        alert('‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
                        await loadProducts();
                    } catch (error) {
                        console.error('Error deleting product data: ', error);
                    }
                }
            };
        });
    }

    // --- 6. ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ---
    loadProducts();

});
